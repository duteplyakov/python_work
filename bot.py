import random
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# Список рун
# Полный список 24 рун Старшего Футарка
runes = [
    ("Феху (Fehu)", "Богатство, изобилие, новые начинания"),
    ("Уруз (Uruz)", "Сила, здоровье, выносливость"),
    ("Турисаз (Thurisaz)", "Защита, вызов, трансформация"),
    ("Ансуз (Ansuz)", "Мудрость, речь, вдохновение"),
    ("Райдо (Raidho)", "Путешествие, движение, развитие"),
    ("Кеназ (Kenaz)", "Озарение, творчество, знание"),
    ("Гебо (Gebo)", "Подарок, партнерство, баланс"),
    ("Вуньо (Wunjo)", "Радость, успех, гармония"),
    ("Хагалаз (Hagalaz)", "Разрушение, хаос, необходимость перемен"),
    ("Наутиз (Nauthiz)", "Нужда, ограничение, внутренняя сила"),
    ("Иса (Isa)", "Покой, задержка, сосредоточение"),
    ("Йера (Jera)", "Урожай, результат, награда за усилия"),
    ("Эйваз (Eiwaz)", "Смерть и возрождение, стойкость"),
    ("Перт (Perthro)", "Тайна, судьба, неожиданность"),
    ("Альгиз (Algiz)", "Защита, интуиция, бдительность"),
    ("Совило (Sowilo)", "Победа, энергия, успех"),
    ("Тейваз (Tiwaz)", "Честь, справедливость, храбрость"),
    ("Беркана (Berkano)", "Рост, рождение, женская энергия"),
    ("Эваз (Ehwaz)", "Движение, прогресс, доверие"),
    ("Манназ (Mannaz)", "Человек, сообщество, «я и другие»"),
    ("Лагуз (Laguz)", "Интуиция, эмоции, поток"),
    ("Ингуз (Ingwaz)", "Плодородие, завершение, покой"),
    ("Отал (Othala)", "Наследие, род, семейные ценности"),
    ("Дагаз (Dagaz)", "Просветление, трансформация, рассвет"), ]

# Полный список 36 карт Ленорман
lenormand = [
    ("1. Всадник", "Новости, послания, движение"),
    ("2. Клевер", "Удача, возможность, лёгкость"),
    ("3. Корабль", "Путешествие, торговля, перемены"),
    ("4. Дом", "Семья, безопасность, комфорт"),
    ("5. Дерево", "Рост, здоровье, жизнь"),
    ("6. Тучи", "Неясность, сомнения, путаница"),
    ("7. Змея", "Обман, соблазн, манипуляция"),
    ("8. Гроб", "Конец, трансформация, потеря"),
    ("9. Букет", "Подарок, радость, признание"),
    ("10. Коса", "Резкий поворот, завершение, неожиданность"),
    ("11. Метла и кнут", "Конфликт, напряжение, повторение"),
    ("12. Птицы", "Разговоры, беспокойство, коммуникация"),
    ("13. Ребёнок", "Невинность, новое начало, наивность"),
    ("14. Лиса", "Хитрость, обман, работа"),
    ("15. Медведь", "Сила, влияние, защита"),
    ("16. Звёзды", "Надежда, мечты, духовность"),
    ("17. Аист", "Перемены, переезд, обновление"),
    ("18. Собака", "Дружба, верность, доверие"),
    ("19. Башня", "Границы, изоляция, институты"),
    ("20. Сад", "Общество, встречи, открытость"),
    ("21. Гора", "Препятствие, задержка, вызов"),
    ("22. Развилка", "Выбор, направление, альтернатива"),
    ("23. Крысы", "Потери, стресс, разрушение"),
    ("24. Сердце", "Любовь, чувства, отношения"),
    ("25. Кольцо", "Обязательства, союз, повторение"),
    ("26. Книга", "Тайна, знания, сокрытое"),
    ("27. Письмо", "Документ, сообщение, известие"),
    ("28. Мужчина", "Кверент или важный мужчина"),
    ("29. Женщина", "Кверент или важная женщина"),
    ("30. Лилии", "Чистота, спокойствие, зрелость"),
    ("31. Солнце", "Успех, энергия, ясность"),
    ("32. Луна", "Интуиция, репутация, эмоции"),
    ("33. Ключ", "Решение, раскрытие, важность"),
    ("34. Рыбы", "Деньги, изобилие, поток"),
    ("35. Якорь", "Стабильность, работа, закрепление"),
    ("36. Крест", "Испытание, судьба, завершение"), ]

# Стартовая команда
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("Руна дня", callback_data="rune")],
        [InlineKeyboardButton("Ленорман дня", callback_data="lenormand")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("Выбери гадание:", reply_markup=reply_markup)

# Обработка кнопок
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "rune":
        symbol = random.choice(runes)
        await query.edit_message_text(text=f"Руна дня: {symbol[0]}\nЗначение: {symbol[1]}")
    elif query.data == "lenormand":
        card = random.choice(lenormand)
        await query.edit_message_text(text=f"Карта Ленорман: {card[0]}\nЗначение: {card[1]}")

# Запуск бота
if __name__ == '__main__':
    TOKEN = os.getenv("TOKEN")  # Получение токена из переменных окружения
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("Бот запущен...")
    app.run_polling()
